# -*- coding: utf-8 -*-
"""visualdataanalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OExCN-7m67OTDSSdso2B0rEiF4Iujxa9
"""

import pandas as pd

def load_and_preprocess(file_path):
    df = pd.read_csv(file_path)
    df.fillna(0, inplace=True)
    numeric_cols = df.select_dtypes(include='number').columns.tolist()
    categorical_cols = df.select_dtypes(exclude='number').columns.tolist()
    return df, numeric_cols, categorical_cols

from openai import OpenAI
client = OpenAI(api_key="YOUR_API_KEY")

def suggest_plots(df, numeric_cols, categorical_cols):
    prompt = f"""
You are a data analyst. Suggest 3-5 visualizations (type and columns) to best highlight
patterns, correlations, or anomalies in the following dataset:
Columns: {df.columns.tolist()}
Numeric columns: {numeric_cols}
Categorical columns: {categorical_cols}
Respond as a Python list of dicts: [{"type": "scatter", "x": "...", "y": "..."}, ...]
"""
    response = client.chat.completions.create(
        model="gpt-4.1-mini",
        messages=[{"role": "user", "content": prompt}]
    )
    import ast
    suggested_plots = ast.literal_eval(response.choices[0].message.content)
    return suggested_plots

import matplotlib.pyplot as plt
import seaborn as sns

def generate_plots(df, suggested_plots):
    plot_files = []
    for i, plot in enumerate(suggested_plots):
        plt.figure(figsize=(6,4))
        if plot["type"] == "scatter":
            sns.scatterplot(data=df, x=plot["x"], y=plot["y"])
        elif plot["type"] == "bar":
            sns.barplot(data=df, x=plot["x"], y=plot["y"])
        elif plot["type"] == "hist":
            sns.histplot(df[plot["x"]], kde=True)
        plt.title(f"{plot['type'].capitalize()} of {plot.get('x','')} vs {plot.get('y','')}")
        filename = f"plot_{i}.png"
        plt.savefig(filename)
        plt.close()
        plot_files.append(filename)
    return plot_files

def generate_insights_and_recommendations(df):
    description = f"Dataset has {df.shape[0]} rows and {df.shape[1]} columns. Here are first few rows:\n{df.head().to_string()}"
    prompt = f"""
Analyze the following dataset and provide:
1. A concise summary highlighting trends, anomalies, and correlations.
2. Actionable recommendations based on the patterns you detect.
Dataset: {description}
"""
    response = client.chat.completions.create(
        model="gpt-4.1-mini",
        messages=[{"role": "user", "content": prompt}]
    )
    return response.choices[0].message.content

pip install pandas matplotlib seaborn plotly streamlit openai fpdf

import streamlit as st

st.title("Generative AI for Visual Data Analysis")

file = st.file_uploader("Upload CSV", type="csv")
if file:
    df, numeric_cols, categorical_cols = load_and_preprocess(file)
    st.write("Data Preview:", df.head())

    st.subheader("AI-Suggested Visualizations")
    suggested_plots = suggest_plots(df, numeric_cols, categorical_cols)
    st.write(suggested_plots)

    st.subheader("Generated Plots")
    plot_files = generate_plots(df, suggested_plots)
    for p in plot_files:
        st.image(p)

    st.subheader("AI Insights & Recommendations")
    insights = generate_insights_and_recommendations(df)
    st.write(insights)